name: Render and deploy website

on:
  push:
    branches: main
  workflow_dispatch:

permissions:
  contents: read
#  pages: write
#  id-token: write
  
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      #   
      # - name: Install dependencies for asdf R plugin
      #   run: apt-get install build-essential libcurl3-dev libreadline-dev gfortran liblzma-dev liblzma5 libbz2-1.0 libbz2-dev xorg-dev libbz2-dev liblzma-dev libpcre2-dev
      #   
      # - name: Instal asdf and tools
      #   uses: asdf-vm/actions/install@v2
      
      - name: Install Inkscape
        shell: bash
        run: |
          sudo apt update
          sudo apt install inkscape

      - name: Install and set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tinytex: true

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.5.1
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
          
      - name: Load cached Python venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Python dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.3.0'

      - name: Install R Dependencies
        uses: r-lib/actions/setup-renv@v2
        with:
          cache-version: 1
          
      - name: Render pdf
        shell: bash
        run: |
          pdf_datetime="$(date +'%Y%m%d_%H%M%S%Z')"
          quarto render web_source/ --to pdf --output-dir pdf/quarto-buggyness --output "ECHILD-Documentation_${pdf_datetime}.pdf"

      - name: Render website
        uses: quarto-dev/quarto-actions/render@v2
        with:
          path: web_source/
          to: html

#      Cloudflare deploy
      - name: Deploy to cloudflare
        uses: cloudflare/wrangler-action@v3
        with:
          accountId: ${{ secrets.CLOUDFLARE_ID }}
          apiToken: ${{ secrets.CLOUDFLARE_PAGES_TOKEN }}
          command: pages deploy ./_docs --project-name=echild-docs --commit-dirty=true

#      Google Cloud deploy
#      - name: Authenticate on GCS
#        uses: google-github-actions/auth@v2
#        with:
#          service_account: '${{ secrets.GCP_SA_EMAIL }}'
#          workload_identity_provider: '${{ secrets.GCP_WIDP }}'
#      
#      - name: Set up Google Cloud SDK
#        uses: google-github-actions/setup-gcloud@v2
#
#      - name: Deploy to Google Cloud
#        run: gsutil -m rsync -d -c -r _site ${{ secrets.GCP_LOC }}

#      GitHub Pages deploy
#      - name: Upload GH Pages artififact
#        uses: actions/upload-pages-artifact@v2#
#      - name: Deploy to GitHub Pages
#        uses: actions/deploy-pages@v2
